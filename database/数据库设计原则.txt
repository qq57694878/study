 总原则： 消除了数据冗余、更新异常、插入异常和删除异常。但也要考虑编程复杂性。和实际业务的需求方向，分析型，录入型
1.主键每表必有，个数越少越好，最好一个。
2.多对多关系，分三表。
3.减少低级用于如某id和名字之类。（可通过缓存码表的形式组装结果数据）。
  可增加高级冗余（计算得出入 单价，数量，小计，小计为高级冗余）。或订单主表增加订单总额。
4.范式
第一范式（1NF）：原子数据项，而不能是集合，数组，记录等非原子数据项。但对于前端多选项可通过，分割的形式存储。如果json存取复杂数据，框架前端可通过json直接展示也可。
第二范式（2NF）：非码属性必须完全依赖于候选码（在1NF基础上消除非主属性对主码的部分函数依赖）
                 要求实体的属性完全依赖于主关键字。所谓完全依赖是指不能存在仅依赖主关键字一部分的属性
第三范式（3NF）   任何非主属性不依赖于其它非主属性（在2NF基础上消除传递依赖）
5. 通俗地理解三个范式
　　第一范式：1NF是对属性的原子性约束，要求属性具有原子性，不可再分解；
　　第二范式：2NF是对记录的惟一性约束，要求记录有惟一标识，即实体的惟一性；
　　第三范式：3NF是对字段冗余性的约束，即任何字段不能由其他字段派生出来，它要求字段没有冗余。
6.为了使查询和编码简便，降低复杂性，可通过创建试图。 减少编码复杂性，可通过存储过程。
7.对统计查询的要求，报表的数据可通过定时任务生成统计表的方式。